name: Build Windows GUI Executable

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows-gui:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies with pip
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller>=6.15.0
        pip install selenium>=4.15.0
        pip install undetected-chromedriver>=3.5.4
        pip install pandas>=2.1.0
        pip install openpyxl>=3.1.2
        pip install pydantic>=2.5.0
        pip install pydantic-settings>=2.1.0
        pip install fake-useragent>=1.4.0
        pip install python-dotenv>=1.0.0
        pip install structlog>=23.2.0
        pip install rich>=13.7.0
        pip install setuptools>=80.9.0
    
    - name: Verify tkinter availability
      run: |
        python -c "import tkinter; print('‚úÖ tkinter works on Windows!')"
    
    - name: List project structure
      run: |
        echo "=== Project Root ==="
        Get-ChildItem -Name
        echo "`n=== Scripts Directory ==="
        Get-ChildItem scripts -Name
        echo "`n=== Assets Directory ==="
        Get-ChildItem assets -Name
        echo "`n=== Source Directory ==="
        Get-ChildItem src -Name
    
    - name: Build Windows GUI executable directly with PyInstaller
      run: |
        echo "üî® Building Windows GUI executable..."
        pyinstaller --clean --noconfirm scripts/build_gui.spec
    
    - name: Create release directory and copy files
      run: |
        echo "üì¶ Creating release package..."
        New-Item -ItemType Directory -Force -Path "release_gui"
        Copy-Item "dist/AI-noye_Job_Crawler_GUI.exe" "release_gui/"
        Copy-Item "assets/ai-noye-logo.png" "release_gui/"
        
        $readmeContent = @"
# AI-noye Job Crawler GUI Version

## üöÄ How to Use

1. **Run the Application**: Double-click AI-noye_Job_Crawler_GUI.exe
2. **Fill the Form**: 
   - Select site (currently Work24 only)
   - Enter login credentials
   - Set search keywords (optional)
   - Choose number of jobs to collect
   - Select output directory
3. **Start Crawling**: Click "üöÄ ÌÅ¨Î°§ÎßÅ ÏãúÏûë" button
4. **Monitor Progress**: Watch the log window for real-time updates

## üìã Requirements

- Internet Connection: Required for job site access
- Chrome Browser: Must be installed (any version)
- Windows 10/11: Recommended operating system

## üìÅ Output

- Excel files will be saved to your chosen directory
- Files are named: Ï±ÑÏö©Í≥µÍ≥†_{timestamp}.xlsx
- Automatic duplicate detection

---
Built with ‚ù§Ô∏è by AI-noye Team
"@
        $readmeContent | Out-File -FilePath "release_gui/README.txt" -Encoding UTF8
    
    - name: List build output
      run: |
        echo "=== Release Directory ==="
        Get-ChildItem release_gui
        echo "`n=== File Sizes ==="
        Get-ChildItem release_gui | ForEach-Object { "$($_.Name): $([math]::Round($_.Length / 1MB, 1)) MB" }
    
    - name: Upload Windows GUI executable
      uses: actions/upload-artifact@v3
      with:
        name: AI-noye_Job_Crawler_Windows_GUI
        path: release_gui/
        retention-days: 90
        
    - name: Create GitHub Release (on tags)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release_gui/AI-noye_Job_Crawler_GUI.exe
          release_gui/ai-noye-logo.png
          release_gui/README.txt
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
